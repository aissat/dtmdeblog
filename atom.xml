<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[مدونة الطيب الضادي]]></title>
  <link href="http://tayeb83.github.com/dtmdeblog/atom.xml" rel="self"/>
  <link href="http://tayeb83.github.com/dtmdeblog/"/>
  <updated>2013-09-09T21:44:19+02:00</updated>
  <id>http://tayeb83.github.com/dtmdeblog/</id>
  <author>
    <name><![CDATA[طيب مرابطي]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ال10 أشياء التي لا نتعلمها في المدرسة حسب بيل غاتس]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/08/30/bill-gates-10conseils/"/>
    <updated>2013-08-30T13:44:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/08/30/bill-gates-10conseils</id>
    <content type="html"><![CDATA[<p>قام بيل غاتس مؤخرا بإلقاء خطاب في مدرسة ثانوية بخصوص 10 أشياء لا نتعلمها في المدرسة و التي من الضروري تعلمها و بسرعة. يمكنكم عدم  الموافقة على هذه النصائح و لكن ما هو مؤكد أن بيل غاتس قد طبقها على نفسه و تعلمها و ساعدته في حياته الحافلة :</p>

<h2>النصيحة الأولى :</h2>

<p>الحياة ليست عادلة و هذا شيئ يجب عليكم التعود عليه</p>

<h2>النصيحة الثانية :</h2>

<p>العالم لا يهتم كثيرا بما تحبونه و تريدونه، العالم ينتظر منكم أن تقدمو شيئ قبل أن يهنئكم.</p>

<h2>النصيحة الثالثة :</h2>

<p>لن تربحو 60000 دولار فور تخرجكم من المدرسة أو الجامعة، ان تكونو مدراء تركبون سيارات بسواق و GSM داخل السيارة. يجب استحقاق النجاح قبل الاستمتاع به.</p>

<h2>النصيحة الرابعة :</h2>

<p>لو تظنون أن استاذكم قاسي معكم فانتظرو رؤية مدير عملكم.</p>

<h2>النصيحة الخامسة :</h2>

<p>العمل في مطعم ليس عيبا، اجدادكم كان يطلقون عليه تسمية مختلفة : فرصة لا تعوض.</p>

<h2>النصيحة السادسة :</h2>

<p>عندما تخطؤن فهذا ليس بسبب الآخرين و لكن يجب التوقف على التدمر و التعلم من الأخطاء</p>

<h2>النصيحة السابعة :</h2>

<p>قبل ولادتكم حياة أباكم كانت أجمل بكثير من ما هي عليه و هذا ل:
- ما كا نو يدفعون أموال لأجلكم
- ما كانو يغسلون ثيابا سوى ثيابهم
- و استماعهم يوميا لمدحكم أنفسكم</p>

<p>لهذا و قبل حماية الغابات الاستوائية من الأخطار المختلفة، حاولو البدأ بتنظيف غرفكم و كل ما بوسعكم عمله في مساعدتهم في حياتهم اليومية.</p>

<h2>النصيحة الثامنة:</h2>

<p>في بعض المدارس، تم الغاء نظام &#8220;رابح-خاسر&#8221; فهناك مدارس ألغت تماما نظام الامتحانات حتى تعطي حظ كبير للتلاميذ، هذا النظام لن تعطيه  لكم الحياة.</p>

<h2>النصيحة التاسعة :</h2>

<p>الحياة  ليست مقسمة لفصول مثل العام الدراسي، و العطلة الصيفية ليس لها معنى في الحياة اليومية، أي عند بدأ العمل لا تنتظرو عطلة أو راحة فالمسؤولية لا تتماشى مع العطل.</p>

<h2>النصيحة العاشرة :</h2>

<p>التلفزيون لا يمثل الحياة الحقيقة أبدا. في الحياة الحقيقية الناس يتركون المقاهي للعمل ليس العكس…</p>

<p>إذا أعجبتكم هذه النصائح و تعتقدون أنها مفيدة انشروها</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ما هو التأثير الذي يحدثه  المبرمج  الجديد لحظة وصوله للفريق ؟]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/08/28/impact-developpeur-equipe/"/>
    <updated>2013-08-28T00:55:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/08/28/impact-developpeur-equipe</id>
    <content type="html"><![CDATA[<p>في العالم الحافل بالبرمجة، أضحى التوظيف و أمسى جزءا لا يتجزأ من مشاغل الشركة الكثيرة، و بما أن الشركات في مجال الحاسوب لا تخلو أو لا تكاد تخلو من  المنتجات الجديدة  فإن التوظيف لا بد أن يتبع هذا التطور و التحديث من خلال توظيف كفاءات بامكانها ملئ الفراغات و إعطاء تصور واقعي لتلك الابتكارات و التخيلات التي زرعت في أذهان أصحاب القرار في الشركة.</p>

<p>للآسف هناك عدد محدود للمبرمجين في وقت مُعين ذوي الخبرة في أي مجال من مجالات البرمجة و بأي لغة كانت. و هذا يتطلب بذل جهد كبير للبحث و التنقيب على المبرمج المطابق لمواصفات العمل و الطلب من خلال الإكثار من المقابلات و التي تأخذ وقت كبير لوحدها فقط.</p>

<p>و الخطأ الذي نراه في أغلب الشركات أن البحث على المبرمج يأخذ وقت كبير لدرجة أن العثور على المبرمج ُينسي الشركة العمل على تطبيق خطة دمج المبرمج  داخل الفريق و التي لا تقل أهمية عن البحث عن المبرمج. هذه الخطة مهمة جدا لأنها سوف تحدد إما سلبا أو إيجابا مدى فعالية المبرمج داخل الفريق.
 فيما يلي بعض الملاحظات حول أهمية بناء خطة شاملة داخل الشركة لدمج المبرمج بصورة فعالة داخل الفريق لزيادة الانتاج و الفعالية للمبرمج و الفريق و الشركة:</p>

<ul>
<li>من دون تأطيرفعال و من دون هيكلة ، المبرمجون المبتدؤن سيفقدون من فعاليتهم و تُصرف قواهم و مجهوداتهم و خاصة موهبتهم في أشياء قد لا تفيد الجميع.</li>
<li><p>بغض النظر عن عن الكفاءة، المبرمج الجديد يخلق ما نسميه &#8220;الدين التقني&#8221; لأنهم سيتعاملون مع برامج  و طرق جديدة عليهم مما يستلزم بدل مجهود لمراقبة وتتبع ما يبرمجونه حتى لا يكون الفرق شاسع بين الأصلي و الجديد سواء في قلب الكود أو في نتيجته.</p></li>
<li><p>يجب تحديد أهداف معقولة حول ما ننتظره من مبرمج جديد داخل الفريق، لهذا فطلب شيئ صعب من الوافدين الجدد قد يدفع بهم لتعطيل العمل و تعطيل سرعة الفريق لفترات طويلة نظرا لصعوبة المهمة في البداية.</p></li>
<li><p>يجب تحديد فترة &#8220;السماح&#8221; يتم من خلالها تحديد أهداف معقولة للجدد، في هذه الفترة مثلا لن يكون المبرمج الجديد مطالبا بالعمل على البيانات الانتاجية و فيها يعتبر أي تقدم في البرمجة عبارة عن عمل خارج ما هو مطلوب فعلا.</p></li>
<li><p>بغض النظر عن كفاءات المبرمج و التي تم توظيفه من خلالها فلا يجب الاعتقاد بأن المبرمج له كل الكفاءات و التكوين الكافي للقيام بالعمل المطلوب. هنا تأتي مرحلة الحوار مع المبرمج لملئ الفراغات الناقصة في التكوين و في المهارات.</p></li>
<li><p>يجب إعطاء أهمية كبيرة  للمبرمجين الجدد فلربما  عندهم أفكار خاطئة حول البرمجة خاصة تلك التي تكون موجهة لأهداف انتاجية حول نطاق واسع و تستعمل بيانات كبيرة.</p></li>
<li><p>لا يجب نسيان الأمور التي تساعد في فعالية الفريق باستمراركالتكوين،العمل الجماعي و العمل على ما أهم و تحديد الأهداف بدقة. والتي يجب تطبيقها و عدم الابتعاد عنها و تذكرها عندما يتجدد الفريق يمجيئ مبرمجين جدد أو ذهاب بعضهم من الفريق.</p></li>
<li><p>عدم الخوف من الاستماع لانتقادات أعضاء الفريق و ملاحظاتهم حول التطور الملاحظ على المبرمجين الجدد. هذه الملاحظات يجب أن تكون أكثر حول سلوك المبرمج الجديد و درجة اندماجه أكثر من انتقاد كفاءاته والتي و إن كانت ناقصة من جهة فلعلها تكون كبيرة من جهة أخرى و بالتالي تقدم فائدة كبيرة كانت ناقصة للفريق.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[كيف تحفز نفسك يوميا]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/08/25/booster-motivation/"/>
    <updated>2013-08-25T00:04:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/08/25/booster-motivation</id>
    <content type="html"><![CDATA[<p>لا يوجد أجمل و أريح من أن تكون متحفز للعمل داخل مشروع تحبه و تكون متحفزا له، ولكن و بطبيعة الإنسان  فإن هناك مرات يفتر خلالها الشغف و ينقص الحافز، لهذا السبب أردت عرض بعض الوصفات التي يمكنكم اتباعها حتى تستطيعون اعطاء دفع و لو مؤقت للحافز حتى يعود الشغف و الحب للعمل.</p>

<h2>غير ولو الشيئ الصغير:</h2>

<p>تريدون العمل على مشروعكم و لكن الحافز غير موجود. افتحو البرنامج و حاولو تحسين و لو سطر في الكود، هذه العملية ستفتح لكم الشهية للعمل على تحسين سطور أخرى و إعادة الحافز للعمل.</p>

<h2>تحدي الساعة:</h2>

<p>هذ النوع  من التحدي يمكن أن يحول عمل بسيط إلى تحدي جميل. مثال ذلك، إذا كان لكم بعض النتائج و الوثائق التي تعرضونها على المحاسبة شهريا، هذا العمل الممل يمكنكم تحويله إلى تحدي من خلال ايجاد كل الشهر أفضل طريقة لتقليل الوقت: فهذا الشهر 4 ساعات الشهر المقبل 3 ساعات و هلم جر.</p>

<h2>تعيين أوقات عمل محددة:</h2>

<p>في بعض الأحيان ليس هناك حافز لا للعمل و لا للتحدي، في هذه الحالة حاولو تخصيص ولو ساعة واحدة ولا تستغنو عن العمل فيها لأي سبب من الأسباب، فلربما ساعة عمل واحدة في النهار هي أفضل شيئ يمكن أن تقومو به، و في أغلب الأحيان ستجدون أنفسكم تعملون اكثر من تلك الساعة و ربما يعود الحافز.</p>

<h2>كتابة لائحة أهداف:</h2>

<p>اكتبو لائحة أهداف سواء أهداف بعيدة أو قريبة. فائدة اللائحة يجعل عملكم أكثر محدودا لأن العائق وراء أي مبرمج أو عامل بصفة عامة هو الخوف من جبل الأعمال التي تنتظره و التي يراها و كأنها لن تنتهي أبدا.</p>

<h2>المساعدة و تقديم يد العون:</h2>

<p>تقديم  يد المساعدة من الأمور التي تساعد في تجديد الحافز و تغيير الأجواء ذهنيا و الخروج من قوقعة العمل الشخصي إلى عمل و تحدي آخر من دون الخروج كاملا من المشروع.</p>

<p>هذه النصائح ما هي إلاعينة من نصائح كثيرة و عادات مختلفة و متنوعة يمكن أن يتبعها أي موظف بصفة عامة و مبرمج أو تقني بصفة خاصة. هذا و في الآخير أتمنى أن تشاروكني من خلال هذا المقال بأفضل العادات التي تتبعونها حتى ترفعو درجة الحافز و الشغف للعمل و الانتاج.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ما هو المعنى الحقيقي لستارتب؟]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/08/19/startup-definition/"/>
    <updated>2013-08-19T08:12:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/08/19/startup-definition</id>
    <content type="html"><![CDATA[<p>في خلال الايام الاخيرة  ومن خلال اهتمامي المتزايد بانشاء و كيفية تمويل مشاريع  البرمجة لفتت انتباهي كلمة  &#8220;ستارتب&#8221; و التي من خلال بعض الشروحات الموجودة في النت و جدت انها تعني بشكل كبير &#8220;شركة أو مؤسسة ناشئة و مبدعة في مجال التكنولوجيات الجديدة&#8221; و لكن هل هذا حقا هو التعريف الأصح لهذه الكلمة ؟</p>

<p>في الحقية التعريف في حد ذاته يثير تساؤلات كثيرة و يُعطي احساس بأن هناك شيئ لا يتوازى مع أهداف و طموحات من يسعون وراء انشاء ستارتب.</p>

<p>عندما نُقرر انشاء ستارتب، فإننا نُقرر القيام بتحليل لسوق غير موجود. إذن من البداية الأمور ليست سهلة. و إذا أخذنا التعريف الذي ذكرته  سابقا فباعتبار الستارتب &#8220;ناشئة&#8221; و &#8220;مبدعة&#8221; فهذا يُعطي احساس أن الخبرة ليست موجودة، و من هنا تبدأ مشاكل منشأ الستارتب :
كيف نثق في فريق ناشئ يُريد الدخول إلى سوق غير موجود بفكرة لم تكن موجودة من قبل؟ و إليكم نبذة مختصرة عن قصة إنشاء ستارتب :
الإجابة على الأسئلة و تبرير وجود الستارتب&#8230;وفقط.</p>

<p>فإذا كان من الصعب إنشاء الستارتب لهذه الدرجة  فلماذا القيام به؟؟؟
إذن لعلها إرادة لتغيير الواقع  اليومي؟؟ فماهي حياته  اليومية إذن؟</p>

<p>الستارتبر يأكل السندويشات بينما يذهب أصدقاءه للمطاعم، ينظم اجتماعات بعد صلاة  الجمعة بينما يذهب أصدقاءه للقيلولة أو التفسح، يؤجل عطله من أجل اجتماع هنا أو هناك و بكل تأكيد لا يفوت ثانية إلا و قد ألقى نظرة على الايميل.</p>

<p>إذن فإنشاء الستارتب ليست عمل و إنما طريقة عيش&#8230;</p>

<p>إنشاء ستارتب هو الذهاب بعيدا وراء الأرقام التي وصلت إليها أية دراسة سوق أو إحصائية، إنشاء الساترتب هو الايمان التام أن الفكرة ستنجح برغم الأرقام و الإحصائيات. الستارتب هي المراهنة على المستقبل و الايمان بأن المجتمع الذي نعيش فيه سيتقبل كل ماهو جديد من أفكار و مشاريع قد تغير من نمط المعيشة إلى الأفضل. إنشاء الستارتب هو تخطي حدود الصعوبات و الأزمات لتحويل المشكلة إلى فرصة.</p>

<p>إنشاء الستارتب هو تقديم الأحلام  و توحيد الأفكار،هو تفضيل عالم و مجتمع يكافئ الإبداع و أين العمل له قيمته و أين المال وسيلة و ليست عقدة، هو ارتكاب أخطاء و التفكير و طرح  الأسئلة يوميا، هو الإبتعاد عن الرؤية لبعد و لكن تقريبها و العيش لغد قبل بعد غد.</p>

<p>الستارتب هي قصة فريق تجمعهم فكرة و مشروع بالإضافة لقيم و اهتمامات تصب في بحر واحد.
ستيف جوبز قال : الابداع هو وضعٌ اخترناه لأن  لأننا نعشق فكرة معينة. الستارتب هي تلك الوضع الذي اخترناه.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[أخطاء ترتكبها كرائد للمشروع  تُحبط الموظفين و تعجل برحليهم من مشروعك]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/08/14/erreurs-employes/"/>
    <updated>2013-08-14T00:54:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/08/14/erreurs-employes</id>
    <content type="html"><![CDATA[<p>ذهاب موظف كفء يمكن أن تكون له نتائج  لا تحمد عقباها لأي مشروع أو لأي شركة. خاصة إذا كان الموظف هو العمود الفقري لمشروع حيوي للشركة يمكن أن يشكل ذهابه  ضربة قاضية. في أي مجال و في مجال الحاسوب خاصة، يسعى قائد المشروع بالإضافة للبحث عن الموظف الكفء يسعى للحفاظ على بقاءهم بتحفيزهم معنويا و ماليا، في هذا المقال سأعرض في نقاط أهم الأخطاء التي يجب تفاديها للحفاظ على الموظفين خاصة الكفء منهم :</p>

<h2>تقييد حماسة و شغف الموظفين :</h2>

<p> الشركات الذكية هي التي توازي بين شغف الموظفين  و أهداف الشركة. من الناحية الإنسانية من الصعب جدا إبعاد الإنسان عن ما يريده و يحبه، لهذا فإذا كان هناك قلة اهتمام لشغف أي موظف، فهذه رسالة غير مياشرة تدعو فيها الموظف للمغادرة.</p>

<h2>احتقار القدرات و الذكاء :</h2>

<p>الانسان الذكي بطبيعته يكره العيش في جو يبعث على الملل، لهذا فإذا قلة التحفيزات و التحديات ستشجع فتأكد هذه الفئة للمغادرة لا محالة و سيبحثون عن من يعطيهم تحديات يومية و لا يحتقر ذكاءهم.</p>

<h2>عدم تحفيز قدراتهم الإبداعية :</h2>

<p>الموظف  الممتاز يحب الابداع  والاتقان في كل شيئ. الرائد الكفء لا يحبس قدرات موظفيه بل بالعكس يحررها، و لكن حذاري عندما نتكلم هنا عن تحرير القدرات ليس في اغراق الموظف في كل ما هو غير مهم و لكن اشراكه و تحميله مهام خارجة عن ما هو مطلوب منه، ما هي الفائدة من امتلاك  حصان لا يتحرك  بعيدا عن مربطه.</p>

<h2>لم تهتم بتطوير قدراتهم و معارفهم :</h2>

<p>الريادة  ليست محطة وصول نهائية و لكن طريق لا تنتهي من التطور الذاتي و الشخصي. لا يهم إن كان الموظف ذكيا أو ماهرا ولكن تذكرو أنه يوجد دائما متسع كبير لتطوير و تنمية الذات، و لهذا لا يجب رسم  حدود حول قدرات الشخص للتطور داخل الشركة.</p>

<h2>لا تسمع إليهم لأنك أنت المدير أو الذي يتخذ القرارات :</h2>

<p>الموظف الجيد يمتلك أفكار و ملاحظات جيدة هذه كلنا يعرفها و لكن يجب السماع لهم حتى تستفيد أنت و الشركة من هذه الأفكار و إلا فتذكرو أن هناك  من سيستمع  إليهم و يأخذ بأفكارهم, ولهذا من خصائص الريادي الناجح هو حسن الاستماع لموظفيه و من يعمل معه و الأمثلة كثيرة  حول ذلك.</p>

<h2>التعامل مع الموظفين كموظفين و فقط :</h2>

<p>الموظف يأتي للعمل من أجل المال و الراتب، هذه حقيقة يتفق معها الجميع، و لكن من قلة الحكمة  أن نعتقد أن الموظف عندما يخرج  من بيته يأتي للعمل  للبحث عن الراتب فقط.  ولهذا أكدت الدراسات أن الراتب ليس العامل الوحيد الذي يبحث عنه الموظف عند استلامه الوظيفة أو لبقاءه  فيها. فعدم  الاهتمام بالناحية الانسانية و العاطفية خطأ يجب تفاديه بقدر المستطاع.</p>

<h2>تتجاهل مشاريعهم الخاصة أو لا تعطيهم الوقت الكافي لها :</h2>

<p>المُسير أو الريادي الكفأ لا يسرق عمل موظفيه على أساس أنها منه، فكل مُسير لا يعطي قيمة لأعمال موظفيه لا يستحق القيادة و مع طول الوقت لن يتماسك مشروعه  ولن يدوم.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[هل أنت فعلا قادر على انشاء مشروع خاصة بك ؟ ]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/08/12/questions-entreprneur/"/>
    <updated>2013-08-12T08:25:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/08/12/questions-entreprneur</id>
    <content type="html"><![CDATA[<p>من خلال قراءتي لبعض المقالات حول مهنة انشاء شركة أو مشروع بصفة عامة وجدت أنه فيه بعض الأسئلة التي يجب على كل من يريد الخوض في  مثل هذه المغامرة أن يطرحها على نفسه حتى لا يخرج عن الطريق و إن كنت أرى أن الخطأ و لا بد منه للتعلم&#8230;</p>

<h2>هل أنت مرتاح لفكرة المجازفة ؟</h2>

<p>مهنة ريادة الأعمال تستلزم بطبيعتها العيش في المجهول. هل أنت ممن يفر من العيش في المجهول؟ إذا كان الجواب بنعم إذن إنشاء عمل أو مشروع ربما لن تكون أفضل الحلول لك. بالعكس إذا كنت ممن يحبون القشعريرية التي تولدها المجازفة إذن توكل على الله.</p>

<h2>هل عندك ميل للاستقلالية ؟</h2>

<p>رائد الأعمال في أي مجال كان يجب أن يتحمل على عاتقه أخذ القرارات يوميا منها الصعبة و منها غير ذلك. فإذا كنتم ممن يؤمنون بقدراتهم و لا يخافون الرفض، فهذا عامل ايجابي سيساعدكم في خوض التجربة.</p>

<h2>هل تجيد مهارة و فن الإقناع ؟</h2>

<p>تذكر دائما أنه  يمكنك أن تبتكر أفضل فكرة  في العالم و لكن إذا كنت لا تستطيع إقناع الزبائن أو من تريده أن يتعامل معك مستقبلا، فإن مهنة الريادة  ستكون قمة صعب المنال. و بالعكس إذا كنت من الذين يحبون التكلم أمام الملأ و ممن يفتحون نقاشات بسهولة مع أناس لا تعرفهم مع اتقان فن النقاش و الجدال و الإقناع، فأنت مهيأ بنسبة كبيرة لهذه المهنة.</p>

<h2>هل تجيد التفاوض؟</h2>

<p>إذا كان هذا أول مشروع  ستقوم  به فإنه ستضطر للتفاوض على أي شيئ : العقود، ثمن المعدات، رواتب العمال، مساهمات المستثمرين. لهذا فإن كفاءات عالية في التفاوض ستساعدك في توفير مال كثير أنت بحاجة  إليه لتنمية مشروعك.</p>

<h2>هل أنت مبدع ؟</h2>

<p>سؤال كبير و عام  ولكنه مهم. هل أنت ممن لديه فكرة كل ما هو قاعد في السيارة أو يتفرج  على التلفاز؟ هل أنت ممن لديه أفكار جديدة تساعده في التخلص من مشاكل يمكنها أن تلم  به في أي وقت من الأوقات؟ تذكر دائما أن الريادي الناجح يستطيع أن يستفيد من النجاحات أو من الأخطاء و ينتج منها أفكار جديدة يمكنها تنمية مشروعه أو على الأقل حل مشاكل كثيرة  يمكن تفاديها.</p>

<h2>هل تحظى بمساعدة الأقارب و هل لديك شبكة مهنية جيدة؟</h2>

<p>من المهم للريادي أن يحظى بثقة و تشجيعات الأقارب. قبل البدأ في أي مشروع تأكد من قوة الشبكة حولك من الأقارب حتى الأصدقاء، فأنت لا تدري القوة  التي يمكن أن تتلقاها من خلال تشجيعات أقاربك و أصدقاءك و المساعدة التي يمكن أن يقدموها لك، ولعله لا يوجدأفضل من الاستفادة من تجارب الأقارب و الاصدقاءو استغلال خبرتهم و نصائحهم لصالح مشروعك.</p>

<p>أتمنى أن ينال المقال إعجابكم و أن تلقى هذه الأسئلة أجوبة عندكم، هذا و المجال مفتوح لمناقشة الموضوع و طرح  الأسئلة التي نسيتها أو لم أركز عليها و التي تعتقدون أنها مهمة و أساسية.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[تطبيق عملي لقياس سرعةالكود بروبي]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/08/02/benchmarking-profiling-ruby-example/"/>
    <updated>2013-08-02T19:56:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/08/02/benchmarking-profiling-ruby-example</id>
    <content type="html"><![CDATA[<p>في هذا المقال و كتطبيق وتتمة للمقال السابق سنقوم بدراسة بسيطة نقوم من خلالهابمقارنة أسرع خوارزمية لحساب متتالية fibonacci المعروفة.</p>

<p>في المثال سنستعمل طريقتين لحساب المتتالية و نقوم  بمقارنة الأسرع بينهما من خلال تطبيق ما شرحناه في المقال السابق حول الbenchmarking.</p>

<p>متتالية فيبوناتشي أو أعداد فيبوناتشي في الرياضيات هي الأرقام التي تكون في المتتالية التالية:</p>

<p>0,1,1,2,3,5,8,13,21&#8230;</p>

<p>و التي تحسب يالطريقة  التالية :</p>

<p>Fn=Fn-1 + Fn-2</p>

<p>مع القيم الناتجة منها : F0=1 و F1=1</p>

<p>في المثال سنقوم بعرض طريقتين :  الأولى باستعمال المقارنة العادية  و الثانية باستعمال include كما هو موضح  في الصورة.
<img src="http://tayeb83.github.com/dtmdeblog/images/rubyBenchmark/fibonacci_algorithm.png" title="fibonacci_algorithm"/></p>

<p>لمقارنة و لقياس السرعة  سنقوم باستعمال المقياس benchmark الذي شرحناه سابقا كما هو موضح  في الصورة :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/rubyBenchmark/benchmark_fibonacci.png" title="benchmark_fibonacci"/></p>

<p>للقياس سنقوم  بتغيير n من خلال أخذ ثلاث قيم مختلفة : 15, 25, 35. النتيجة موضحة في الصورة :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/rubyBenchmark/benchmark_fibonacci_result.png" title="benchmark_fibonacci_result"/></p>

<p>النتيجة توضح أن وبعد ما يكون n أكبر من 25 نلاحظ تباين في سرعة تنفيذ المتتالية بين الطريقتين بحيث أن الطريقة التي تستعمل الinclude تأخد أكبر وقت من الطريقة التي تستعمل طريقة المقارنة البديهية.</p>

<p>أتمنى بهذا التطبيق و المقال السابق أنها تكونت لديكم فكرة أكثر وضوحا حول استعمال الbenchmarking بروبي.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[قياس و اختبار سرعة الكود بروبي]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/08/02/benchmarking-profiling-ruby/"/>
    <updated>2013-08-02T12:45:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/08/02/benchmarking-profiling-ruby</id>
    <content type="html"><![CDATA[<p>في البرمجة بعد تصحيح كل الأخطاء و التأكد من عمل الكود من الطبيعي أن نفكر بعدها أن الكود جاهز للعمل؛ و لكن عمليا الكود و في كثير من الأحيان يشتغل ببطأ أو يكون أقل فعالة من ما هو منتظر. و رغم التطور الملحوظ من جانب السرعة مع تطور النسخ المختلفة لروبي منذ ال1.8 إلى ال2.0 حاليا إلا اننا سنحتاج لأدوات تسمح لنا بقياس و اختبار سرعة و فعالية الكود كليا أو في بعض أجزاءه.</p>

<p>الbenchmark  أو اختبار السرعة يمثل الخطوات المتبعة التي تجعل من الكود أو التطبيق يقوم بعملية أو وظيفة معينة و من خلالها نقوم بقياس سرعة تنفيذ هذه العملية. يمكنكم بعدها و من خلال حساب هذا الوقت تحسين أداء الكود أو البرنامج الخاص بكم و تقليله إلى أبعد حد ممكن.</p>

<h2>الطريقة البديهية </h2>

<p>للقيام بعملية القياس، ruby يحوي مكتبة تسمى benchmark. هذه المكتبة تتوفر على وظائف عديدة يمكنها قياس سرعة التنفيد للكود كليا. على سبيل المثال :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/rubyBenchmark/rubyBenchmark1.png" title="benchmark1"/></p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/rubyBenchmark/rubyBenchmarkResult1.png" title="benchmarkresult1"/></p>

<p>الخانات و من اليسار تعبر بالترتيب عن :</p>

<ul>
<li>الوقت cpu للمستخدم</li>
<li>الوقت cpu للنظام</li>
<li>الوقت cpu الكلي</li>
<li>الوقت الفعلي (الذي يهمنا كثيرا)</li>
</ul>


<p>و بما أن الوظيفة measure بامكانها التعامل مع كتل أو مجموعات منفصلة داخل نفس الكود، فإنه بإمكاننا كتابة قياسات بشكل أحسن و أدق مثل ما هو موضح في الكود التالي :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/rubyBenchmark/rubyBenchmark2.png" title="rubyBenchmark2"/></p>

<p>في هذا المثال قمنا بقياس كتلتين مختلفتين داخل نفس الكود، و النتيجة قياسان لكل كتلة كما هو موضح في الصورة:</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/rubyBenchmark/benchmarkRubyResult2.png" title="benchmarkRubyResult2"/></p>

<p>النتيجة و إن أردنا تحليلها توضح اختلاف صغير بين الوظيفتين : for  و times و إن كانت النتيجة توضح أن for تستهلك وقتcpu مستخدم أكثر من times.</p>

<h2>الProfilng لاكثر دقة في القياس :</h2>

<p>إذا كان الbenchmarking يقوم بقياس الوقت الكلي لتنفيذ أمر ما و مقارنته مع نسخ أخرى للكود، فإن الprofiling هو العملية التي ستعطينا المعلومة التالية : &#8220;وقت تنفيذ لكل كود داخل الكود الاجمالي&#8221; ، على سببل المثال إذا فرضنا أن في داخل الكود هناك سطر يشوش في أداء البرنامج، باستعمال  الprofiling يمكنكم تحديد و مباشرة المشكل الذي يسبب بطأ البرنامج.</p>

<p>ruby يحوي على خاصية الprofiling، ما علينا سوى إضافة :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>require "profile"</span></code></pre></td></tr></table></div></figure>


<p>في بداية الكود و انتهى الأمر.</p>

<p>لنأخذ مثال كامل :
<img src="http://tayeb83.github.com/dtmdeblog/images/rubyBenchmark/rubyProfiling1.png" title="profiling1"/></p>

<p>النتيجة موضحة في الصورة المرفقة، معلومات كثيرة تمت كتابتها و لكن قراءتها جد سهلة.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/rubyBenchmark/rubyProfilingResult1.png" title="profilingresult"/></p>

<p>الخانة الأولى من اليسار تعبر عن نسبة الوقت المستغرق للوظيفة التي توجد على أقصى اليمين، في المثال الprofiler  أخبرنا بأن 100% من الاجمالي لوقت التنفيذ تم استهلاكه من الوظيفة times في الinteger كلاس. الخانة الثانية تمثل الوقت المستغرق بالثواني.
الخانة calls تحدد عدد المرات التي ارسلت للوظيفة. في هذه الحالة الوظيفة times تم ارسالها مرتين.
خلاصة القول، أنه يمكنكم استعمال نتيجة الprofiler لتحديد نقطة الضعف في الكود و تحسينها.</p>

<p>تقبل الله الصيام  والقيام&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[أشياء تمنيت تعلمها في الجامعة]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/08/01/achiaa-tmanyt-t3lmha-1/"/>
    <updated>2013-08-01T03:39:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/08/01/achiaa-tmanyt-t3lmha-1</id>
    <content type="html"><![CDATA[<p>لقد تخرجت سنة 2006 من الجامعة الجزائرية كمهندس دولة في مجال الحاسوب ورغم قلة الامكانات أنذاك من نذرة الكتب و عدم  توفر الانترنت وكون دفعتي كانت الأولى في مجال الحاسوب في جامعتي، إلا أن تكويني شخصيا كان فوق المتوسط  في مجالات، حسن في مجالات أخرى و دون &#8220;الصفر كالفن&#8221; في أخرى. هذا من الجانب البيداغوجي، الآن أعتقد و الله أعلم أن الأمور تحسنت و الامكانات زادت و الخبرة نمت من الجانب البيداغوجي، إلا أن هناك نقاط لا زالت و لن تنال حقها من التكوين كنت أتمنى أن نتعلمها أو على الأقل نُوجه إليها حتى نَطلع و نُطالع عليها، من بينها و على سبيل الذكر فقط :</p>

<ul>
<li><p>لماذا و كيف يجب على أي طالب أو عامل في مجال الحاسوب القيام  بالمراقبة و المتابعة التقنية و إلى أي مدى هذا الجانب مهم و مهم جدا في يومياته و أولوياته أكثر من أي مجال آخر نظرا لسرعة التغيرات و كثرة الأخبار من ثغرات جديدة و تقنيات حديثة&#8230;</p></li>
<li><p>شيئ مهم تعلمته باحتكاكي مع مبرمجين و تقنيين من شتى أنحاء العالم هو أن السيرة الذاتية أو الCV لم يصبح  بالضرورة أمر أساسي و شرط مهم لدى أصحاب الشركات للتوظيف في مجال الحاسوب، فلعلكم سمعتم بقصص عصاميين لم يتلقو لا تعليم جامعي و لا تكوين مختص ، أصبحو الآن متوظفين في شركات كيبرة أو صغيرة.</p></li>
<li><p>السمعة و ما أدراك ما السمعة، أمر لا تقل أهميته عن الشهادات، حتى أضحت السمعة داخل المجتمع الحاسوبي توازي في قيمتها شهادة علمية. فإنشاء سمعة خاصة بكل واحد تحتاج تكوين لوحدها لتعدد الأساليب و صعوبة المهمة، فليس من السهل تكوين سمعة داخل مجتمع يحوي الالاف من الأفراد و المختصين من جميع أنحاء العالم.</p></li>
<li><p>التعامل مع اناس ليسو من اختصاصك أصبح الواقع اليومي لأي موظف أو باحث في مجال الحاسوب، و إن كان الاختصاص قريب من علم  الحاسوب في أغلب الأحيان،  إلا أن المختصين  حولنا لا يفقهون في كثير من المواقف ما نقوله و نريد فعله، ففن التعامل مع هؤلاء ليس بالسهل و التكلم معهم بلغة مفهومة و قريبة منهم من الأمور التي تواجه أغلب العاملين في مجال الحاسوب و لعلكم جربتم التكلم مع جدتكم حول الايفون :)، ليس بالسهل بتاتا.</p></li>
</ul>


<p>النقاط كثيرة و تركت بعضها للنقاش كإنشاء الشركات، و الكتابة و حضور المؤتمرات و المشاركة فيها، لعلنا نستفيد من خبراتكم و تجاربكم أنتم يا مجتمع الحاسوبيات.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[تسريع التعامل مع أوامر rails]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/07/31/zeus-rails/"/>
    <updated>2013-07-31T16:56:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/07/31/zeus-rails</id>
    <content type="html"><![CDATA[<p>المتعامل مع رايلز لاحظ بطأ ارسال الأوامر و أخذها و قت كبير للتنفيذ، للآسف هذه الوضعية تصعب من مهمة  المبرمج و تعطل عجلة الإنتاجية و روح العمل لديه.</p>

<p>هذا المشكل اشتكى منه الكثير من المطورين على مستوى منصة العمل، مما عجل بظهور بعض الجيمات لعل أبرزها zeus و الذي سأقوم بشرحه في هذا المقال بايجاز.</p>

<p>zeus عبارة عن gem يساعد بعد تثبيثه في تسريع تنفيذ الأوامر داخل rails.</p>

<h2>تثبيث zeus :</h2>

<p>يمكنكم تثبيث هذا الجيم بالطريقة المعتمدة في تثبيث الجيمات في روبي و ذلك بارسال الأمر التالي :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install zeus</span></code></pre></td></tr></table></div></figure>


<h2>تفعيل zeus :</h2>

<p>لتفعيل الجيم و العمل به ما يجب القيام به هو الدخول في ملف مشروعكم rails و ارسال الأمر التالي :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ zeus start</span></code></pre></td></tr></table></div></figure>


<p>هذا الأمر سيرسل أوامر أخرى يسعى من خلالها الجيم إلى تحميل المشروع حتى يمكننا إرسال الأوامر رايلز المعروفة من خلاله، و هذا كما توضحه  الصورة، للإشارة إلى أن اللون الأخضر يشير إلى كل الأوامر التي يمكننا ارسالهابواسطة الجيم. مع العلم أنه عند إرسال الأمر يتغير لون الأوامر من البرتقالي إلى الأخضر حسب سرعة تحميل المشروع من الجيم.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/zeusgem/zeus_start.png" title="zeus starting"/></p>

<p>بعدها لم يبقى إلى ارسال الأوامر الكلاسيكية لرايلز مسبقة بكلمة zeus كما هو موضح في الصور :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/zeusgem/zeus_server.png" title="zeus server"/></p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/zeusgem/zeus_console.png" title="zeus console"/></p>

<p>لحد الآن الأمور عادية و لكن الفرق كبير بين سرعة ارسال الأوامر بالطريقة العادية وباستعمال هذا الجيم. و الدليل هي هذه المقارنة البسيطة بين سرعة تنفيذ الأوامر بدون و باستعمال الجيم zeus، فإذا أرسلنا مثلا الأمر :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails console</span></code></pre></td></tr></table></div></figure>


<p>فالوقت الذي تستغرقه موضح في الصورة :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/zeusgem/time_rails_c.png" title="rails console time"/></p>

<p>و هو وقت كبير مقارنة بالأمر المرسل بواسطة الجيم zeus كما هو موضح في الصورة :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/zeusgem/zeus_time_console.png" title="zeus console time"/></p>

<p>تقبل الله صيامكم و قيامكم&#8230;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[تعبير نمطي بروبي يساعدك في معرفة ما إذا كان أي عدد أولي أم لا]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/07/06/ruby-prime-number/"/>
    <updated>2013-07-06T01:13:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/07/06/ruby-prime-number</id>
    <content type="html"><![CDATA[<p>بعد مقالين حول التعابير النمطية، اليكم هذا التعبير النمطي القاتل.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/rubyprimenumber/rubyregexp.png" title="ruby regexp"/></p>

<p>ماهي فائدته؟ الجواب في العنوان، أي أنه و إذا استعمل بطريقة سليمة سوف يساعد في معرفة ما إن كان العدد أولي أم لا.</p>

<p>استعماله بطريقة سليمة يقتضي اجراء تعديل بسيط على العدد و هو تحويله إلى متتاليات من الرقم 1. مثال ذلك، 7 ستحول إلى 1111111.</p>

<p>في روبي النتيجة كالتالي :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/rubyprimenumber/nombre premier ruby.png" title="ruby_primer_number"/></p>

<p>سحر الخوارزميات&#8230;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[التعابير النمطية و روبي - الجزء الثاني]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/06/10/regexp-ruby-p2/"/>
    <updated>2013-06-10T19:49:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/06/10/regexp-ruby-p2</id>
    <content type="html"><![CDATA[<p>هذا المقال هو تكملة للمقال السابق الذي بدأته حول التعابير النمطية في روبي. في هذا المقال سأبدأ بتكملة الأمثلة التي بدأتها سابقا ثم أنتقل إلى طريقة البحث و الاستبدال.</p>

<h2>تكملة  الأمثلة</h2>

<h2>التكرار الجشع : </h2>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/regexp_ruby/repetition_gourmande.png" title="ruby_Regexp_gorumande"/></p>

<h2>التجميع بواسطة الحاضنتين :</h2>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/regexp_ruby/group_parentese.png" title="ruby_Regexp_grouping"/></p>

<h2>البدائل :</h2>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/regexp_ruby/replacement.png" title="ruby_Regexp_replacement"/></p>

<h2>المراسي anchors :</h2>

<p>المراسي عبارة عن أحرف أو بالأحرى رموز تساعد في حصر موقع التعبير النمطي :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/regexp_ruby/anchor.png" title="ruby_Regexp_anchor"/></p>

<h2>البحث و الاستبدال :</h2>

<p>من أهم الطرق أو العمليات الخاصة بالسلاسل في روبي العمليتين  sub و gsub. هاتين العمليتين تقومان بالبحث و الاستبدال على سلاسل الحروف باستعمال التعابير النمطية. أين sub تستبدل الحدوث الأول بينما gsub تستبدل كل الحوادث داخل السلسلة، لنأخذ أمثلة على ذلك :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/regexp_ruby/example_sub_gsub_1.png" title="ruby_Regexp_gsub1"/></p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/regexp_ruby/results_sub_gsub_1.png" title="ruby_Regexp_gsub1_result"/></p>

<p>في المثال الأول النتيجة موضحة في الصورة المرفقة أين قمنا بحذف التعليقات بالsub  بينما قمنا بحذف كل مل هو حرف ماعدا  الأرقام بواسطة gsub.</p>

<p>في المثال الثاني و بطريقتين مختلفتين باستعمال gsub فقط،  قمنابتكبير الحرف الأول من  كلمة tayeb إلى Tayeb.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/regexp_ruby/example_sub_gsub_2.png" title="ruby_Regexp_gsub_2"/></p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/regexp_ruby/result_sub_gsub_2.png" title="ruby_Regexp_gsub2_result"/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[التعابير النمطية و روبي - الجزء الأول]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/05/21/regexp-ruby/"/>
    <updated>2013-05-21T21:44:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/05/21/regexp-ruby</id>
    <content type="html"><![CDATA[<p>هل حلمتم يوما بتعلم الصينية؟ ممتاز في هذا المقال سوف أعلمكم شيئا يشبهها, أي أنه يمكنكم كتابة شيء مثل هذا :</p>

<pre><code>        (((https?|ftp)://(w{3}\.)?)(?&lt;!www)(\w+-?)*\.([a-z]{2,4}))
</code></pre>

<p>هذا ما نسميه  التعابير النمطية أو  regular expression.
التعابير النمطية عبارة  عن نظام قوي و سريع للبحث عل سلسلة معينة من الحروف داخل سلاسل كبيرة (جملة، نصوص&#8230;)، أو بعبارة أخرى هو استعمال وظيفة ابحث/استبدل  بطريقة جد متطورة و التي لا يمكنكم التخلي عنها فور تعلمها و استعمالها.
فالتعابير النمطية سوف تسمح لنا بالبحث و الاستبدال داخل الجُمل و النصوص بطريقة فعالة  وسريعة  في نفس الوقت، و هذه بعض الأمثلة مما يمكن أن نفعله  باستعمالها :</p>

<ul>
<li><p>التأكد من أن البريد الإلكتروني الذي تم ادخاله من طرف المستخدم  صحيح الشكل مثل : tayeb@gmail.com.</p></li>
<li><p>تبديل شكل كتابة التاريخ  من الطريقة  الأمريكية  (2010-05-08) إلى الطريقة  الأوروبية مثلا (05/8/2012).</p></li>
<li><p>القيام  بعملية  بحث و استبدال معقدة داخل نص كبير.</p></li>
</ul>


<p>و هلم جر من العمليات المعقدة  التي يمكن القيام بها على النصوص أو الصفحات و التي لا تعد و لا تحصى.
الشيء الجميل الذي يمكن البدأ به هو أن كل لغات البرمجة (على كل حال التي أعرفها ) لا تحتاج لتفعيل أي مكتبة أو برنامج خاص للعمل بالتعابير النمطية و هذا لكثرة استعمالاتها.
في هذا المقال و إن كنت مُحبًا لperl في التعامل مع التعابير النمطية، سوف أركز على ruby تماشيا مع نمط المدونة و باعتبارها لغة تشبه perl في العديد من المواصفات  و التي من بينها التعابير النمطية.</p>

<h2>التركيب :</h2>

<p>داخل روبي التعبيرات النمطية لها الشكل التالي :</p>

<pre><code>                            /pattern/modifiers
</code></pre>

<p>بحيث تعبر  pattern عن التعبير و modifiers عن متغيرات نمط الربط. فيما يخص هذه الأخيرة  فإن روبي يدعم المتغيرات التالية :</p>

<ul>
<li><p>&#8220;i&#8221; تجاهل حالة الأحرف عند مطابقة النصوص</p></li>
<li><p>&#8220;o&#8221; يقوم بالربط مرة واحدة فقط</p></li>
<li><p>&#8220;x&#8221; تجاهل الفضاءات الخالية</p></li>
<li><p>&#8220;m&#8221; يسمح بالربط على مجموعة من السطور بحيث أن الرجوع إلى السطر يعتبره حرفا من الحروف.</p></li>
</ul>


<p>بالاضافة  إلى انه يمكننا مزج  العديد من هذه المتغيرات مع تعبير نمطي واحد، فمثلا لتجاهل حالة  الأحرف و الفضاءات الخالية نمزج المتغيرين التاليين : ix/.</p>

<h2>نماذج التعابير النمطية في روبي :</h2>

<p>باستثناء أحرف التحكم (+ ? . * ^ $ ( ) [ ] { } | ) ، كل حرف يطابق نفسه، كما أنه يمكن الغاء خاصية  التحكم في الحروف باستعمال الخط المائل العكسي backslash &#8220;&#34;.
هذه اهم تركيبات التعابير النمطية الموجودة  داخل روبي :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/regexp_ruby/ruby_Regexp.png" title="ruby_Regexp"/></p>

<h2>أمثلة التعابير النمطية :</h2>

<h2>ربط الأحرف و الأرقام  :</h2>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/regexp_ruby/caracter_class.png" title="rubyversion"/></p>

<h2>حالات التكرار :</h2>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/regexp_ruby/reptetive_case.png" title="rubyversion"/></p>

<p>في الجزء الثاني إن شاءالله، سأكمل الامثلة المتداولة و سوف أعرض لكم طريقة البحث و الاستبدال بواسطة روبي و التعابير النمطية.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[مدخل إلى روبي]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/05/08/intro-ruby/"/>
    <updated>2013-05-08T18:29:00+02:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/05/08/intro-ruby</id>
    <content type="html"><![CDATA[<h2>نبذة عامة  عن روبي :</h2>

<p>كان أول ظهور لRuby سنة 1995 بفضل مطوره Yukihiro Matsumoto، جامعي ياباني، مما جعل هذه اللغة أكثر شهرة في اليابان من Perl أو Python. يأخذ Ruby تركيبه من لغات مختلفة : الجانب البراغماتي من Perl، التوجه الكائني من الSmaltalk ، و الوضوح من الPython. أما عن أصل التسمية فهذا يرجع لكون Ruby يقتبس أفكارا كثيرة من Perl، لهذا فإن المطورين في Perl لن يجدو صعوبة كبيرة  في تعلم هذه اللغة.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/ruby/YukihiroMatsumoto.JPG" title="Matz"/></p>

<h2>تثبيت و تجربة روبي :</h2>

<p>الطريقة الأمثل لتعلم لغة جديدة هو استعمالها و لاستعمالها فلا بد من تثبيتها. روبي متوفر في كل الأنظمة (linux/unix، Windows، Mac OS X، OS/2&#8230;). النسخة الثابتة الحالية لروبي هي النسخة ١.٩.٣ و إن كانت النسخة ٢.٠.٠ قد ظهرت من بضعة أيام.
على الWindows النسخة يمكن تحمليها من الموقع <a href="http://rubyinstaller.org/downloads">http://rubyinstaller.org/downloads</a> . في لينوكس، روبي متوفر الآن في شكل حزم لأغلبية التوزيعات في حالة عدم توفره للتوزيعة الخاصة بكم يمكنكم تحمليه و تثبيته &#8220;يدويا&#8221; من الموقع    <a href="www.ruby-lang.org">www.ruby-lang.org</a> باستعمال الطريقة المعتادة : &#8220;make; make install&#8221;. بالنسبة للMac فإنه وبعد النسخة ١٠.٤ فهو يحوي روبي داخل حزمة أدوات التطوير  (development kit ).</p>

<h2>الخطوات الأولى :</h2>

<p>لتجاربنا الأولية سوف نستعمل برنامج من أهم البرامج الروبية وهو الIRB لInteractive Ruby ، لنفرض أنكم قمتم و بجدارة بتثبيت روبي، يمكنكم التأكد من النسخة التي قمتم بتثبيتها عن طريق الأمر :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/ruby/rubyVersion.png" title="rubyversion"/></p>

<p>نفس الشيء بالنسبة لIRB :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/ruby/irbVersion.png" title="irbversion"/></p>

<p>يمكنكم الإقلاع الآن، لنبدأ بكتابة المثال التالي على المحرر الذي تريدون كما في الصورة، بعدها احفظوه  باسم example.rb مثلا.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/ruby/exampleRuby.png" title="exampleRuby"/></p>

<p>بعدها افتحوا الterminal على مكان الملف و قومو بارسال الأمر ruby example.rb النتيجة توضحها الصورة :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/ruby/examplerubyexecution.png" title="executeRubyversion"/></p>

<p>هذا المثال جد بسيط لكل من له بعض المفاهيم في البرمجة، لهذا فهو لا يحتاج لشرح مفصل و لكننا سنشرح فقط ما قمنا به من الجانب البرمجي، في السطر الثالث استعملنا الوظيفة print التي تسمح بطباعة النص على الشاشة، هذه الوظيفة تستقبل وسيطا واحدا و هو عبارة عن سلسلة محارف بين علامتي التنصيص &#8220;&#8221;. في السطر الرابع، البرنامج ينتظر الإجابة على السؤال ا لمطروح سابقا و الذي هو اسم المستخدم، لهذا الغرض نستعمل الوظيفة readline و التي لها دور القراءة على جهاز الإدخال القياسي (STDIN) إلى أن نقوم بالضغط على المفتاح ENTER، النتيجة ستحفظ داخل المتغير name. الآن المتغير سيحتوي على الإسم و علامة الرجوع إلى السطر&#8221; n&#34;، لهذا قمنا باستعمال chomp قبل الطبع لحذف العودة إلى السطر.</p>

<h2>أين تجدون المساعدة :</h2>

<p>لعل التوثيق هو أكبر مشكل في روبي و ماعدا الموجود في المكتبة الرئيسية سوف ترون بأنفسكم أنه مشكل لديه حل وحيد و هو قراءة الأمثلة المرفقة و في بعض الأحيان قراءة مصدر الحزم.
عندما قمتم بتثبيت روبي فقد قمتم بتثبيت RI : Ruby Interactive Reference. البحث يواسطة هذا البرنامج سهل، بحيث أنه يلزمكم فقط طلبه مرفقا بالنص الذي تريدون البحث عليه. مثلا، لو أردتم البحث على التوثيق الخاص بالArray، فإنه يجب ارسال الأمر كالتالي : ri Array، و سوف تحصلون على ما تريدونه.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/ruby/arrayhelp.png" title="arrayHelp"/></p>

<h2>قبل الذهاب بعيدا :</h2>

<p>في الأخير إليكم بعض الموارد التي يمكن مطالعتها و اللجوء إليها لتعلم المزيد عن هذه اللغة :</p>

<ol>
<li><a href="http://www.ruby-lang.org">http://www.ruby-lang.org</a></li>
<li><a href="http://raa.ruby-lang.org">http://raa.ruby-lang.org</a></li>
<li><a href="http://rubyforge.org">http://rubyforge.org</a></li>
<li><a href="https://www.ruby-toolbox.com">https://www.ruby-toolbox.com</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[التكملة التلقائية للgit ]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/03/20/git-automcompletion/"/>
    <updated>2013-03-20T09:29:00+01:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/03/20/git-automcompletion</id>
    <content type="html"><![CDATA[<p>في هذا المقال سأشرح  لكم الطريقة التي يمكنكم من خلالها الاستفادة من التكملة التلقائية لأوامر الgit داخل الbash أو مفسر سطر الأوامر.</p>

<p>أول شيئ يجب القيام به هو تحميل السكريبت : <code>git-completion.bash</code> و حفظه داخل المجلد البيت الخاص بكم كالتالي :</p>

<figure class='code'><figcaption><span>تحميل السكريبت داخل الملف الخاص   </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl https://raw.github.com/git/git/master/contrib/completion/git-completion.bash -o ~/.git-completion.bash</span></code></pre></td></tr></table></div></figure>


<p>بعدها يجب إضافة الأسطر التالية داخل ملف bash_profile. الموجود داخل المجلد البيت الخاص بكم، هذه الأسطر تُعلم الbash بتنفيذ السكريبت الخاص بالتكملة التلقائية إذا وجد :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/gitautocompletion/linesaddedtoscript.png" title="اضافة الأسطر التالية للbash_profile"/></p>

<p>الأن ماعليكم فعله الا فتح الbash و البدأ في كتابة أمر git و التكملة باستعمال الTAB، كماماهو موضح في الصورة :</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/gitautocompletion/gitexamplecommand.png" title="مثال لتكملة تلقائية لgit"/></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[موارد مفيدة لكل مبرمجRails]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/02/28/imporatenresourceforrails/"/>
    <updated>2013-02-28T23:59:00+01:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/02/28/imporatenresourceforrails</id>
    <content type="html"><![CDATA[<p>في هذا المقال أحببت أن أقدم لكم بعض الموارد التي انتقيتها من هنا و هناك و التي أرى أنها مفيدة إن لم نقل أساسية لكل مطور بمنصة Ruby On Rails.</p>

<h2><a href="http://edgeguides.rubyonrails.org/">Railsguides</a></h2>

<p>تعتبر المورد الرئيسي لكل مطور Rails و خاصة للمبيتدئين وهي تحتوي على كل ما نحتاجه للبدئ بالتطوير و العمل على المنصة.</p>

<h2><a href="https://www.ruby-toolbox.com/">Rubytoolbox</a>  </h2>

<p>هذه المنصة تحتوي على العديد من المكتبات البرمجية و التي تسمى الGem. يمكنكم البحث عن أي مكتبة بواسطة تصنيفها، اسمها&#8230;كما يمكنكم الحصول على الكثير من المعلومات المرفقة على شكل احصائيات مختلفة حول عدد التحميلات أو التوثيق الخاص بالمكتبة.</p>

<h2><a href="http://railscasts.com/">Railscasts</a></h2>

<p>تعتبر قاعدة بيانات كبيرة لعدة دروس مصغرة حول Rails على شكل تسجيلات شاشة (screencast)، مفيدة جدا خاصة إذا أردنا لمحة سريعة عن كيفية عمل مكتبة معينة.</p>

<h2><a href="http://www.codeschool.com/">CodeSchool</a></h2>

<p>عبارة عن منصة تعلم تسمح باكتساب مهارات في مجالات متنوعة في برمجة الويب. الفكرة جميلة و الدروس مقسمة لمجموعات من التسجيلات المصورة و بعد كل درس هناك مجموعة من التمارين تسمح بعد حلها طبعا بالانتقال إلى مستوى أعلى في الدرس. أغلب الدروس مدفوعة الثمن و لكن هناك بعض الدروس مجانية و خاصة الدرس الخاص بRails  <a href="http://www.codeschool.com/courses/rails-for-zombies-redux/">RailsforZombies</a> أما من أراد كل الدروس فيمكنم مشاهدتها عن طريق دفع اشتراك شهري،</p>

<p>في الأخير آنوه لقلة الموارد العربية في هذا المجال و ان كانت هناك بعض الموارد القليلة حول Rails مع هذا و بالاضافة لمدونتي و التي اكتب فيها مقالات تطبيقية حول المنصة هناك عمل جميل يقوم به الأخ محمد الشيخ في  <a href="http://blog.msheikh.me/">مدونته</a> أيضا لتوصيل و لتعليم التقنية باللغة العربية.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[بالفيديو كيفية تقاسم المستودعات باستعمال الgithub]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/02/22/git-and-github-vid3/"/>
    <updated>2013-02-22T23:02:00+01:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/02/22/git-and-github-vid3</id>
    <content type="html"><![CDATA[<p> هذا المقال عبارة  عن تكملة لما بدأته مسبقا حول الgit بالفيديو. الدرس الثالث يشرح  لكم كيفية  تقاسم المستودعات باستعمال خدمة الgithub.</p>

<p>أتمنى أن الدرس سيفيدكم و أنا في الخدمة من أجل مناقشة الدرس أو تحسينه في المستقبل.</p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/rIZZ2YZdZew "></iframe></div>


<p>و ملف الدرس قمت بتقاسمه في هذا الرابط</p>

<p><a href="http://fr.slideshare.net/tayebmerabti/github-16704980">ملف الدرس </a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ التهيئة  والرجوع إلى الوراء في الgit بالفيديو]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/02/21/git-staged-and-reset-vid2/"/>
    <updated>2013-02-21T00:28:00+01:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/02/21/git-staged-and-reset-vid2</id>
    <content type="html"><![CDATA[<p>هذا المقال عبارة  عن تكملة لما بدأته مسبقا حول الgit بالفيديو. الدرس الثاني عبارة عن عرض لأهم الأوامر التس تساعد في التحكم بتهيئة الملفات و حفظها و كيفية  الغاءها و الرجوع إلى الوراء في حالة الخطأ أو لمجرد التغيير.</p>

<p>أتمنى أن الدرس سيفيدكم و أنا في الخدمة من أجل مناقشة الدرس أو تحسينه في المستقبل.</p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/X-yqXZzd-YQ "></iframe></div>


<p>و ملف الدرس قمت بتقاسمه في هذا الرابط</p>

<p><a href="http://fr.slideshare.net/tayebmerabti/git-cours-2-pdf">ملف الدرس </a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[بعض محركات البحث التي يمكن تثبيتها على موقعك]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/02/19/searchengineexamples/"/>
    <updated>2013-02-19T22:45:00+01:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/02/19/searchengineexamples</id>
    <content type="html"><![CDATA[<p>ماهي محركات البحث التي يمكن استعمالها في موقعك :</p>

<p>من أهم الميزات التي يجب أن يتمتع بها أي موقع ويب اخباري هو محرك البحث الذي يحتويه الموقع. عندما يريد المستخدم طرح  سؤال أو البحث على مقال محدد فلا بد أن يقوم بالعملية بطريقة  سريعة و دقيقة في نفس الوقت.
الأمر sql على كامل النص يعتبر حلا سريعا و سهلا و لكن لا يعتبر بتاتا الحل الأمثل من ناحية الفعالية من جهة و من جهة ثانية أن الأمر ليس بالسهل لكتابة محرك بحث بواسطة الأوامر sql.
هذا المقال سيعطيكم لائحة لمجموعة من محركات البحث التي يمكنكم تثبيتها على خادم الويب الخاص بموقعكم. بالاضافة للAPI روبي التي تقوم بذلك.</p>

<h2>Google CSE</h2>

<p>هو عبارة عن خدمة تقدمها جوجل لفهرسة الصفحات الخاصة بموقع ويب معين و عرض النتائج في صفحة من اختيارنا بواسطة تصميم اختياري. رغم كونها الحل الأقل فعالية إلا أن هذا المحرك من أسهل المحركات تثبيتا و استعمالا.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/searchengine/google.jpg" title="google"/></p>

<p><a href="https://github.com/vodafon/google_cse">https://github.com/vodafon/google_cse</a></p>

<h2>Solr</h2>

<p>solr هو محرك البحث مفتوح المصدر الخاص ب
apache سهل التثبيث خاصة على لينوكس يمكنكم استغلاله سريعا و لن تحتاجون إلى عمليات معقدة.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/searchengine/solr.jpg" title="solr"/></p>

<p><a href="http://sunspot.github.com/">http://sunspot.github.com/</a></p>

<h2>sphinx</h2>

<p>sphinx هو محرك بحث أخر مفتوح المصدر مع جميع الخصائص التي يتمتع بها solr ولكن التثبيث أصعب و يتطلب بعض المعرفة بالنظام و خصائصه.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/searchengine/sphinx.jpg" title="sphinx"/></p>

<p><a href="http://pat.github.com/riddle/">http://pat.github.com/riddle/</a></p>

<h2>Elasticsearch </h2>

<p>عبارة  عن محرك بحث مبني ب <a href="http://tayeb83.github.com/dtmdeblog/blog/2012/12/28/lucene-introduction/">lucene </a> مثله مثل solr هو لا يستعمل مخطط. الفهرسة  و البحث تتم عبر أوامر HTTP ب JSON لجعلها أكثر مرونة.</p>

<p><img src="http://tayeb83.github.com/dtmdeblog/images/searchengine/elasticsearch.jpg" title="UMLS"/></p>

<p><a href="https://github.com/PoseBiz/stretcher">https://github.com/PoseBiz/stretcher</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[مدخل إلى الgit بالفيديو]]></title>
    <link href="http://tayeb83.github.com/dtmdeblog/blog/2013/02/16/git-intro-video/"/>
    <updated>2013-02-16T01:28:00+01:00</updated>
    <id>http://tayeb83.github.com/dtmdeblog/blog/2013/02/16/git-intro-video</id>
    <content type="html"><![CDATA[<p>في هذا المقال و لأول مرة سوف أقدم  لكم فيديو تفصيلي حول درس تمهيدي للgit. الدرس عبارة عن مدخل للأساسيات الرئيسية التي يمكن البدأ بها في تعلم الgit.</p>

<p>أتمنى أن الدرس سيفيدكم و أنا في الخدمة من أجل مناقشة الدرس أو تحسينه في المستقبل.</p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/OubKSavaG-U "></iframe></div>


<p>و ملف الدرس قمت بتقاسمه في هذا الرابط</p>

<p><a href="http://fr.slideshare.net/tayebmerabti/git-introduction-16688778">ملف الدرس </a></p>
]]></content>
  </entry>
  
</feed>
